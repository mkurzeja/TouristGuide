@model TouristGuide.Models.Place

@{
    ViewBag.Title = Model.Name + " - Edit";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/tiny_mce/tiny_mce.js")" type="text/javascript"></script>
<script type="text/javascript">
    tinyMCE.init({
        mode: "specific_textareas",
        editor_selector: "TinyMCE",
        theme: "advanced"
    });

    function UpdateText() {
        var text = tinyMCE.get('Description').getContent();
        $('#Description').html(text);
    }
</script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Details</legend>

        @Html.HiddenFor(model => model.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description, new { @class = "TinyMCE" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>
    </fieldset>
    
    <fieldset>
        <legend>Location</legend>

        @Html.HiddenFor(model => model.Coordinates.ID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Coordinates.Latitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Coordinates.Latitude)
            @Html.ValidationMessageFor(model => model.Coordinates.Latitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Coordinates.Longitude)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Coordinates.Longitude)
            @Html.ValidationMessageFor(model => model.Coordinates.Longitude)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Country)
        </div>
        <div class="editor-field">
            @*@Html.HiddenFor(model => model.Country.ID)
            @Html.HiddenFor(model => model.Country.Name)
            @Html.HiddenFor(model => model.Country.Description)
            @Html.EditorFor(x => x.Country)*@
            @Html.DropDownListFor(model => model.Country.ID, new SelectList(ViewBag.Countries, "Value", "Text", Model.Country.ID))
        </div>
    </fieldset>

        <p>
            <input type="submit" value="Save" onclick="UpdateText()" />
        </p>
}
@if (Model.imgUrl != null && Model.imgUrl!="")
{
	<h3 style="display: inline-block; margin-right:20px;">Images</h3>
    	
	<div class="post-images">
		<ul class="thumbs noscript">
	
				<li>
					<a class="thumb" href="@Url.Content("~/" + Model.imgUrl)" title="Image 1">
						<img src="@Url.Content("~/" + Model.imgUrl)" alt="Image 1" />
					</a>
				</li>
   
		</ul>
        @Html.ActionLink("Delete", "removeImage", new { PlaceID = Model.ID })
	</div>
}

<div id="addImageDiv">
		@using (Html.BeginForm("ImageCreate", "Place", FormMethod.Post, new { enctype = "multipart/form-data", id =  "addImage",
                                onsubmit = "AddImage()"}))
  {
			@Html.ValidationSummary(true)
			<fieldset>
				<legend>Add Image</legend>
                @Html.Hidden("PlaceID", Model.ID)  
				    <div class="editor-field-images">
                        <input type="file" name="FileName" id="FileName"/>
                    </div>
                    
                    <br />
                <input type="submit" value="Send!" />
			</fieldset>
  }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
